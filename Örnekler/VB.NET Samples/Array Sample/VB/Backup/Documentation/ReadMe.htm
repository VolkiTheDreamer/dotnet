<!--TO READ THIS HELP FILE, RIGHT-CLICK ON THE FILE NAME IN THE
    SOLUTION EXPLORER PANE AND SELECT "VIEW IN BROWSER"-->

<html><head><title>Array Sample</title></head><body><h1>Array Sample</h1><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()"><font color="DarkGray"></font><p /></div><div class="introduction"><p>To get samples and instructions for installing them, see the following:</p><ul><li><p>Click <span class="ui">Samples</span> on the Visual Studio <span class="ui">Help</span> menu.</p><p>For more information, see <mshelp:link keywords="e121a9c2-b35b-4b3f-8cba-30edd84c835f" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">Locating Sample Files</mshelp:link>.</p></li><li><p>The most recent versions and the complete list of samples are available on the Visual Studio 2008 Samples Web site. </p></li><li><p>You can also locate samples on your computer's hard disk. By default, samples and a Readme file are copied to a folder under \Program Files\Visual Studio 9\Samples\. For Visual Studio Express Editions, all samples are located on the Internet.</p><div class="alert"><table width="100%"    IS" without warranties.</p></td></tr></table></div></li></ul></div><h3 class="procedureSubHeading">To view the sample documentation</h3><div class="subSection"><ol><li><p>Locate this sample on the MSDN Web site, and then download and open the sample.</p></li><li><p>In <span class="ui">Solution Explorer</span>, double-click the <span class="ui">Documentation</span> folder.</p></li><li><p>If you are using Visual Basic Express Edition, right-click <span class="ui">ReadMe.htm</span> in the <span class="ui">Documentation</span> folder. Click <span class="ui">View in Browser</span>.</p></li><li><p>If you are using another version of Visual Basic, double-click <span class="ui">ReadMe.htm</span> in the <span class="ui">Documentation</span> folder. </p></li></ol></div><h1 class="heading"><span   style="cursor:default;"   tabindex="0">Demonstrates</span></h1><div id="demonstratesSection" class="section" name="collapseableSection" style=""><p>The<span class="code"> Customer </span>class implements the <mshelp:link keywords="T:System.IComparable" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">IComparable</mshelp:link> interface, which is required for <mshelp:link keywords="Overload:System.Array.Sort" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">Sort</mshelp:link> and <mshelp:link keywords="Overload:System.Array.BinarySearch" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">BinarySearch</mshelp:link> functionality. <span class="code">Customer</span> objects can be sorted by either the <span class="code">Name</span> or <span class="code">Id</span> property. Changing the <span class="ui">Array of</span> option from <span class="ui">Strings</span> to <span class="ui">Objects</span> enables the <span class="ui">Field to use for Sorts</span> control that determines whether an array of <span class="code">Customer</span> objects is sorted by the Customer's <span class="code">Name</span> field or <span class="code">Id</span> property. The shared method <span class="code">SetCompareKey</span> of the<span class="code"> Customer </span>class can be called before a sort is performed to change the field that is used. </p><p>The six buttons perform the following tasks:  </p><ul><li><p><span class="ui">Create Static Array</span>   Creates an array using the {} syntax to load an array of values. Once the array is loaded, a support procedure, <span class="code">DisplayArrayData</span>, enumerates the array and puts the values in a list. For more information about declaring and initializing arrays, see <mshelp:link keywords="fae3eca1-f0b2-4400-994b-7aa58a848448" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">Dim Statement (Visual Basic)</mshelp:link>.</p></li><li><p><span class="ui">Sort</span>   Loads the data by using the same code as in the <span class="ui">Create Static Array</span> procedure. Once the data is loaded, the shared method <mshelp:link keywords="Overload:System.Array.Sort" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">Sort</mshelp:link> of the <mshelp:link keywords="frlrfSystemArrayClassTopic" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">Array Class</mshelp:link> class is applied, and then the data is loaded into the<span class="code"> lstAfter </span>control. Strings and primitive types like integers are automatically comparable. The <mshelp:link keywords="T:System.IComparable" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">IComparable</mshelp:link> interface is implemented on the<span class="code"> Customer </span>class to enable sorting.</p></li><li><p><span class="ui">Reverse</span>   The procedure uses the <mshelp:link keywords="Overload:System.Array.Reverse" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">Reverse</mshelp:link> method to reverse the order of the elements in the array. (<mshelp:link keywords="Overload:System.Array.Reverse" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">Reverse</mshelp:link> does not do a reverse sort of the elements; it reverses the elements in the array.) </p></li><li><p><span class="ui">Binary Search</span>   Performing a binary search requires that the elements in the array be sorted. After the data is loaded into the array it is sorted, and then a binary search is performed by using the <mshelp:link keywords="Overload:System.Array.BinarySearch" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">BinarySearch</mshelp:link> method. The value provided in the text-box control labeled <span class="ui">Search For</span> is used as the search criteria. If the item is found, its index position is displayed. If the item is not found, the <mshelp:link keywords="Overload:System.Array.BinarySearch" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">BinarySearch</mshelp:link> method returns the bitwise complement of where the item would have been if it existed. </p></li><li><p><span class="ui">Create Dynamic Array</span><span class="label">   </span>Uses the numeric value provided in the text-box control<span class="code"> txtLength </span>to <span class="keyword">ReDim</span> an array. It then loops through each new element and displays an input box requesting a value for the item. When all the values have been obtained, they are displayed. </p></li><li><p><span class="ui">Create Matrix Array</span>   Builds a two-dimensional array that contains two columns and three rows, and then displays it in a list box.</p></li></ul></div></div><div id="footer"><div class="footerLine"></div><!--<include item="copyrightStatement"/>--><A NAME="feedback"></A><span id="fb" class="feedbackcss" /> 
             
                
               
                
                
               
               
               
              
                
               
              
               
               
               
         </div></div></body></html>
