<!--TO READ THIS HELP FILE, RIGHT-CLICK ON THE FILE NAME IN THE
    SOLUTION EXPLORER PANE AND SELECT "VIEW IN BROWSER"-->

<html><head><title>Custom Drawing User Control Sample</title></head><body><h1>Custom Drawing User Control Sample</h1><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()"><font color="DarkGray"></font><p /></div><div class="introduction"><p>To get samples and instructions for installing them, see the following:</p><ul><li><p>Click <span class="ui">Samples</span> on the Visual Studio <span class="ui">Help</span> menu.</p><p>For more information, see <mshelp:link keywords="e121a9c2-b35b-4b3f-8cba-30edd84c835f" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">Locating Sample Files</mshelp:link>.</p></li><li><p>The most recent versions and the complete list of samples are available on the Visual Studio 2008 Samples Web site. </p></li><li><p>You can also locate samples on your computer's hard disk. By default, samples and a Readme file are copied to a folder under \Program Files\Visual Studio 9\Samples\. For Visual Studio Express Editions, all samples are located on the Internet.</p><div class="alert"><table width="100%"    IS" without warranties.</p></td></tr></table></div></li></ul></div><h3 class="procedureSubHeading">To run this sample</h3><div class="subSection"><ul><li><p>Press F5.</p></li></ul></div><h1 class="heading"><span   style="cursor:default;"   tabindex="0">Demonstrates</span></h1><div id="demonstratesSection" class="section" name="collapseableSection" style=""><p>This sample demonstrates how to create custom-drawn user controls, use them on a form, have the control respond to events, and define properties for use in the designer. The controls that are created are score-keeping controls. One is a digital scoreboard which displays a number in a digital format. The other is a beaded scoreboard which slides beads back and forth to track a score. Both respond to various events and have numerous properties available at design time.</p><ul><li><p><span class="label">Custom Drawing</span>   Both custom controls in this sample demonstrate how to inherit from the <mshelp:link keywords="T:System.Windows.Forms.UserControl" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">UserControl</mshelp:link> class and override <mshelp:link keywords="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">OnPaint</mshelp:link>. A custom-drawn user control inherits from <mshelp:link keywords="T:System.Windows.Forms.UserControl" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">UserControl</mshelp:link>. The custom drawing occurs by overriding the <mshelp:link keywords="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">OnPaint</mshelp:link> method of the control. The <mshelp:link keywords="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">OnPaint</mshelp:link> method provides the <mshelp:link keywords="T:System.Windows.Forms.PaintEventArgs" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">PaintEventArgs</mshelp:link> argument from which the clip rectangle (<mshelp:link keywords="T:System.Drawing.Rectangle" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">Rectangle</mshelp:link>) and the graphics object (<mshelp:link keywords="T:System.Drawing.Graphics" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">Graphics</mshelp:link>) are obtained.</p></li><li><p><span class="label">Custom Control Events</span>   Custom controls can respond to the events that a normal control would respond to. This is done by overriding the event handler method in the <mshelp:link keywords="T:System.Windows.Forms.UserControl" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">UserControl</mshelp:link> class. Both custom controls in this sample demonstrate how to respond to various events such as <mshelp:link keywords="E:System.Windows.Forms.Control.MouseUp" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">MouseUp</mshelp:link> and <mshelp:link keywords="E:System.Windows.Forms.Control.Click" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">Click</mshelp:link>.</p></li><li><p><span class="label">Properties   </span>It is often desirable to create properties for a control that can be edited at design time using Visual Studio. Both custom controls in this sample show how to create <span class="keyword">Public</span> properties that will appear in the <span class="ui">Properties</span> window in Visual Studio.</p></li></ul></div></div><div id="footer"><div class="footerLine"></div><!--<include item="copyrightStatement"/>--><A NAME="feedback"></A><span id="fb" class="feedbackcss" /> 
             
                
               
                
                
               
               
               
              
                
               
              
               
               
               
         </div></div></body></html>
