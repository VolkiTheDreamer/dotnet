<!--TO READ THIS HELP FILE, RIGHT-CLICK ON THE FILE NAME IN THE
    SOLUTION EXPLORER PANE AND SELECT "VIEW IN BROWSER"-->

<html><head><title>String Methods Sample</title></head><body><h1>String Methods Sample</h1><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()"><font color="DarkGray"></font><p /></div><div class="introduction"><p>To get samples and instructions for installing them, see the following:</p><ul><li><p>Click <span class="ui">Samples</span> on the Visual Studio <span class="ui">Help</span> menu.</p><p>For more information, see <mshelp:link keywords="e121a9c2-b35b-4b3f-8cba-30edd84c835f" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">Locating Sample Files</mshelp:link>.</p></li><li><p>The most recent versions and the complete list of samples are available on the Visual Studio 2008 Samples Web site. </p></li><li><p>You can also locate samples on your computer's hard disk. By default, samples and a Readme file are copied to a folder under \Program Files\Visual Studio 9\Samples\. For Visual Studio Express Editions, all samples are located on the Internet.</p><div class="alert"><table width="100%"    IS" without warranties.</p></td></tr></table></div></li></ul></div><h3 class="procedureSubHeading">To view the sample documentation</h3><div class="subSection"><ol><li><p>In <span class="ui">Solution Explorer</span>, double-click the <span class="ui">Documentation</span> folder.</p></li><li><p>If you are using Visual Basic Express Edition, right-click <span class="ui">ReadMe.htm</span> in the <span class="ui">Documentation</span> folder. Select <span class="ui">View in Browser</span>.</p></li><li><p>If you are using another version of Visual Basic, double-click <span class="ui">ReadMe.htm</span> in the <span class="ui">Documentation</span> folder. </p></li></ol></div><h1 class="heading"><span   style="cursor:default;"   tabindex="0">Demonstrates</span></h1><div id="demonstratesSection" class="section" name="collapseableSection" style=""><p>The main form contains a <mshelp:link keywords="T:System.Windows.Forms.TabControl" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">TabControl</mshelp:link> with three tab pages that demonstrate <mshelp:link keywords="T:System.String" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">String</mshelp:link> member methods, <mshelp:link keywords="T:System.String" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">String</mshelp:link> shared methods, and <mshelp:link keywords="T:System.IO.StringWriter" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">StringWriter</mshelp:link> methods. Each tab page enables the user to enter string values and then execute <mshelp:link keywords="T:System.String" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">String</mshelp:link> methods by clicking buttons. The underlying design contains a <span class="code">Method</span> class and a <span class="code">Parameter</span> class. Each instance of the <span class="code">Method</span> class represents a different <mshelp:link keywords="T:System.String" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">String</mshelp:link> method. This design makes it easy to pass the values entered on the form to the appropriate <mshelp:link keywords="T:System.String" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">String</mshelp:link> method.</p><div class="tableSection"><table width="50%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th><p>Method</p></th><th><p>Description</p></th></tr><tr><td><p><mshelp:link keywords="M:System.String.Insert(System.Int32,System.String)" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">String<span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span>Insert</mshelp:link></p><p><mshelp:link keywords="Overload:System.String.Remove" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">String<span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span>Remove</mshelp:link></p></td><td><p>These methods create and return new <span class="keyword">String</span> objects. Many of these methods are overloaded and take one, two, or three parameters. The code may ignore some of the input fields in the form.</p></td></tr><tr><td><p><mshelp:link keywords="Overload:System.String.IndexOf" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">String<span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span>IndexOf</mshelp:link></p><p><mshelp:link keywords="Overload:System.String.StartsWith" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">String<span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span>StartsWith</mshelp:link></p><p><mshelp:link keywords="Overload:System.String.EndsWith" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">String<span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span>EndsWith</mshelp:link></p></td><td><p>These methods return information about an existing string, but do not create or modify <span class="keyword">String</span> objects. </p></td></tr><tr><td><p><mshelp:link keywords="Overload:System.String.Format" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">String<span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span>Format</mshelp:link></p><p><mshelp:link keywords="Overload:System.String.Join" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">String<span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span>Join</mshelp:link></p></td><td><p>These methods often need two <span class="keyword">String</span>s to complete a task, or create new strings, and are therefore implemented as <span class="keyword">Shared</span> methods. </p></td></tr><tr><td><p><mshelp:link keywords="Overload:System.Text.StringBuilder.ToString" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">StringBuilder<span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span>ToString</mshelp:link></p></td><td><p>The <mshelp:link keywords="T:System.Text.StringBuilder" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">StringBuilder</mshelp:link> class enables you to manipulate the characters in the string. The <mshelp:link keywords="Overload:System.Text.StringBuilder.ToString" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">ToString</mshelp:link> method retrieves the text that is contained by the <mshelp:link keywords="T:System.Text.StringBuilder" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">StringBuilder</mshelp:link> object.</p></td></tr><tr><td><p><mshelp:link keywords="Overload:System.IO.StringWriter.Write" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">StringWriter<span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span>Write</mshelp:link></p><p><mshelp:link keywords="Overload:System.IO.TextWriter.WriteLine" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">TextWriter<span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span>WriteLine</mshelp:link></p><p><mshelp:link keywords="M:System.IO.StringWriter.ToString" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">StringWriter<span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span>ToString</mshelp:link></p></td><td><p>The <mshelp:link keywords="T:System.IO.StringWriter" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">StringWriter</mshelp:link> class is useful when you have to append text to an output string. The <mshelp:link keywords="T:System.IO.StringWriter" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">StringWriter</mshelp:link> class provides an internal buffer to which you can write text as if you were writing to a file. The <mshelp:link keywords="Overload:System.IO.StringWriter.Write" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">Write</mshelp:link> and <mshelp:link keywords="Overload:System.IO.TextWriter.WriteLine" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">WriteLine</mshelp:link> methods append text to the buffer. The <mshelp:link keywords="M:System.IO.StringWriter.ToString" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">ToString</mshelp:link> method retrieves the text that is contained by the <mshelp:link keywords="T:System.IO.StringWriter" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">StringWriter</mshelp:link> object. </p></td></tr></table></div><p>The buttons listing <span class="keyword">String</span> class methods are actually <mshelp:link keywords="T:System.Windows.Forms.RadioButton" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">RadioButton</mshelp:link> controls. The button appearance is obtained by setting the <mshelp:link keywords="P:System.Windows.Forms.RadioButton.Appearance" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">Appearance</mshelp:link> property to <mshelp:link keywords="F:System.Windows.Forms.Appearance.Button" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">Button</mshelp:link>. The controls resemble buttons, but stay selected when clicked.</p><p>The buttons used to select the <span class="keyword">String</span> class methods all call into the same event handler, <span class="code">HandleCheckedChanged</span>. This procedure uses many <mshelp:link keywords="1B051C0E-F499-42F6-ACB5-6F4F27824B40" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">Handles</mshelp:link> clauses. Inside the procedure, an <span class="keyword">If...Then</span> statement uses the sender parameter to determine which button was selected and acts appropriately. </p><p>There is no way to float controls on top of a tab control, so that a single instance of a group of controls appears on each page. To provide that feature in this sample, selecting a page on the tab control sets the <mshelp:link keywords="P:System.Windows.Forms.Control.Parent" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">Parent</mshelp:link> property of a <mshelp:link keywords="T:System.Windows.Forms.Panel" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">Panel</mshelp:link> control that contains all the "common" controls to be the selected page, like this:</p><div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><td colspan="2"><pre>pnlDemo.Parent = tabStringDemo.SelectedTab </pre></td></tr></table></span></div><p>To trigger a breakpoint so that you can walk through the <mshelp:link keywords="T:System.Text.StringBuilder" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">StringBuilder</mshelp:link> and <mshelp:link keywords="T:System.IO.StringWriter" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">StringWriter</mshelp:link> code, the sample uses the <mshelp:link keywords="M:System.Diagnostics.Debugger.Break" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">Debugger<span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span>Break</mshelp:link> method. This method is called if the <mshelp:link keywords="T:System.Windows.Forms.CheckBox" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">CheckBox</mshelp:link> control labeled <span class="ui">Step through code</span> is selected.</p></div></div><div id="footer"><div class="footerLine"></div><!--<include item="copyrightStatement"/>--><A NAME="feedback"></A><span id="fb" class="feedbackcss" /> 
             
                
               
                
                
               
               
               
              
                
               
              
               
               
               
         </div></div></body></html>
