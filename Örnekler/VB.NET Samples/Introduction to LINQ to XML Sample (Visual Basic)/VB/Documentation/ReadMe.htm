<!--TO READ THIS HELP FILE, RIGHT-CLICK ON THE FILE NAME IN THE
    SOLUTION EXPLORER PANE AND SELECT "VIEW IN BROWSER"-->

<html><head><title>Introduction to LINQ to XML Sample (Visual Basic)</title></head><body><h1>Introduction to LINQ to XML Sample (Visual Basic)</h1><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()"><font color="DarkGray"></font><p /></div><div class="introduction"><p><h3 class="procedureSubHeading">To get samples and instructions for installing them</h3><div class="subSection"><ul><li><p>Do one or more of the following:</p><ul><li><p>On the <span class="ui">Help</span> menu, click <span class="ui">Samples</span>.</p><p>The Readme displays information about samples.</p></li><li><p>Visit the Visual Studio 2008 Samples Web site. The most recent versions of samples are available there. </p></li><li><p>Locate samples on the computer on which Visual Studio is installed. By default, samples and a Readme file are installed in <span class="placeholder">drive</span>:\Program Files\Microsoft Visual Studio 9.0\Samples\<span class="placeholder">lcid</span>. For Express editions of Visual Studio, all samples are located online.</p></li></ul></li></ul><p>For more information, see <mshelp:link keywords="e121a9c2-b35b-4b3f-8cba-30edd84c835f" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">Locating Sample Files</mshelp:link>.</p></div></p><p><div class="alert"><table width="100%"     </table></div></p><h3 class="procedureSubHeading">To run this sample</h3><div class="subSection"><ul><li><p>Press F5.</p></li></ul></div></div><h1 class="heading"><span   style="cursor:default;"   tabindex="0">Demonstrates</span></h1><div id="demonstratesSection" class="section" name="collapseableSection" style=""><p>The sample is a short introduction to <mshelp:link keywords="N:System.Xml.Linq" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">System.Xml.Linq</mshelp:link>. It takes your familiarity with the XML DOM API as a starting point. The goal is to illustrate how to construct a predefined XML document by using LINQ to XML. Two different approaches are demonstrated.</p><ul><li><p>First, the document is assembled by using an approach similar to XML DOM. (See method <span class="code">CreateDocumentVerbose</span>.) Notice the various ways in which different nodes are added to the document in <span class="code">CreateDocumentVerbose</span>.</p></li><li><p>The second approach, known as <span class="term">functional construction</span>, is a more concise style that achieves the same result. (See method <span class="code">CreateDocumentConcise</span>.) </p></li></ul><p>The sample also provides a method for traversing the document (method <span class="code">DumpNode</span>).</p><p>Note the familiar properties exposed on the various node types.</p></div></div><div id="footer"><div class="footerLine"></div><!--<include item="copyrightStatement"/>--><A NAME="feedback"></A><span id="fb" class="feedbackcss" /> 
             
                
               
                
                
               
               
               
              
                
               
              
               
               
               
         </div></div></body></html>
