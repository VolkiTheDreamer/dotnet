<!--TO READ THIS HELP FILE, RIGHT-CLICK ON THE FILE NAME IN THE
    SOLUTION EXPLORER PANE AND SELECT "VIEW IN BROWSER"-->

<html><head><title>Logging Sample</title></head><body><h1>Logging Sample</h1><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()"><font color="DarkGray"></font><p /></div><div class="introduction"><p>Visual Basic offers two different logging mechanisms. <span class="keyword">My.Application.Log</span> provides access to the operating system event logs and also allows you to write messages to text files. The <mshelp:link keywords="T:System.Diagnostics.EventLog" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">EventLog</mshelp:link> component provides access to the operating system event logs. The <mshelp:link keywords="T:System.Diagnostics.EventLog" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">EventLog</mshelp:link> component allows you to add and delete logs, add and remove event log sources, write messages, and delete messages. For sample code, see Event Log Sample.</p><p>To get samples and instructions for installing them, see the following:</p><ul><li><p>Click <span class="ui">Samples</span> on the Visual Studio <span class="ui">Help</span> menu.</p><p>For more information, see <mshelp:link keywords="e121a9c2-b35b-4b3f-8cba-30edd84c835f" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">Locating Sample Files</mshelp:link>.</p></li><li><p>The most recent versions and the complete list of samples are available on the Visual Studio 2008 Samples Web site. </p></li><li><p>You can also locate samples on your computer's hard disk. By default, samples and a Readme file are copied to a folder under \Program Files\Visual Studio 9\Samples\. For Visual Studio Express Editions, all samples are located on the Internet.</p><div class="alert"><table width="100%"    IS" without warranties.</p></td></tr></table></div></li></ul></div><h3 class="procedureSubHeading">To run this sample</h3><div class="subSection"><ol><li><p>Press F5. The main form lists the listeners that are configured for the sample.</p></li><li><p>Write a message in the <mshelp:link keywords="T:System.Windows.Forms.TextBox" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">TextBox</mshelp:link> control on the form.</p></li><li><p>Click the <span class="ui">Write Log Message</span> button.</p><p>The message is written to each of the listeners.</p><ol><li><p>The XML file written by the <mshelp:link keywords="T:System.Diagnostics.XmlWriterTraceListener" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">XmlWriterTraceListener</mshelp:link> resides at c:\logsamples\SampleLog.xml.</p></li><li><p>The plain-text file written by the <mshelp:link keywords="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">FileLogTraceListener</mshelp:link> resides in your "Application Data" directory.  If you are running the program in Visual Studio, the path will look something like "c:\Documents And Settings\[user]\Application Data\Microsoft Corporation\Microsoft Visual Studio\[8.0*]\LogSample.log.</p></li></ol></li></ol></div><h1 class="heading"><span   style="cursor:default;"   tabindex="0">Demonstrates</span></h1><div id="demonstratesSection" class="section" name="collapseableSection" style=""><p>This sample contains:</p><ul><li><p><span class="code">Form1</span>   Provides a simple form that shows all listeners currently enabled for <span class="keyword">My.Application.Log</span> and has controls that allow text to be written to <span class="keyword">My.Application.Log</span>.</p></li><li><p><span class="code">app.config</span>   Defines the configuration for <span class="keyword">My.Application.Log</span> — where messages should be written, which messages should be filtered, and so on.</p></li></ul><p>This sample demonstrates how <span class="keyword">My.Application.Log</span> can be used to write a plain text file, the event log, and an XML file. You can easily implement a custom <mshelp:link keywords="T:System.Diagnostics.TraceListener" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">TraceListener</mshelp:link> that writes to other locations as well, such as a database or an e-mail message.</p><p>Each message is assigned the "Severity" selected on the form. When the listener receives the message, it may discard the message based on its filter level. For example, the <mshelp:link keywords="T:System.Diagnostics.EventLogTraceListener" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">EventLogTraceListener</mshelp:link> component is configured to write error messages only, so any messages you write with a severity "Information" or "Warning" will be written to the XML and plain text file and not to the <mshelp:link keywords="T:System.Diagnostics.EventLog" tabindex="0" xmlns:mshelp="http://msdn.microsoft.com/mshelp">EventLog</mshelp:link>.</p><p>To change the behavior of the sample, edit the app.config file of the project. Comments in the file serve as a guide to changes.</p><p>You can use <span class="keyword">My.Application.Log</span> and the application model to log startup, shutdown, and unhandled exceptions. To see the code for this sample, double-click <span class="ui">My Project</span> in <span class="ui">Solution Explorer</span>. On the <span class="ui">Application</span> pane, click the <span class="ui">View Code</span> button. </p></div></div><div id="footer"><div class="footerLine"></div><!--<include item="copyrightStatement"/>--><A NAME="feedback"></A><span id="fb" class="feedbackcss" /> 
             
                
               
                
                
               
               
               
              
                
               
              
               
               
               
         </div></div></body></html>
