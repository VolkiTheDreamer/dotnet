<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <system.diagnostics>
        <sources>
            
			      <!--  The <source> element defines the configuration for a given TraceSource, such as where messages for that
                  source should be written and when, and the severity of the messages that the source will listen to.  The
                  TraceSource described below is used by My.Application.Log
                  
                  The switch attribute allows the source to be turned on or off based on some criteria.  Here, a 
				          DefaultSwitch is used.  The DefaultSwitch allows My.Application.Log to be used only when messages
				          are of a certain severity (Information or higher in this example.")
			      -->
          <source name="DefaultSource" switchName="DefaultSwitch">
            <listeners>
                    <add name="FileLog"/>
                    <add name="EventLog"/>
                    <add name="XmlLog"/>
                    <!-- add any additional listeners here -->
                </listeners>
            </source>
         </sources>
        <switches>
            <add name="DefaultSwitch" value="Information" />
        </switches>
		
		    <!--
			    The shared listeners section defines listeners that can be referenced in any source by the name 
			    (e.g., "FileLog").
		    -->
        <sharedListeners>
          <add name="FileLog"
               type="Microsoft.VisualBasic.Logging.FileLogTraceListener, Microsoft.VisualBasic, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL" 
               initializeData="FileLogWriter" delimiter=";" >

            <!-- 
              Additionally, any listeners can specify a filter.  The filter defines which messages should be 
					    written by the enclosing listener.  Below a SeverityFilter is used to specify that only messages of
					    type "Information" or higher should be written to the file listener.
				    -->
            <filter type="System.Diagnostics.EventTypeFilter" initializeData="Information" />
          </add>

          <add name="EventLog" type="System.Diagnostics.EventLogTraceListener" initializeData="My Application Log Sample"> 
				    <filter type="System.Diagnostics.EventTypeFilter" initializeData="Error" />
			    </add>
			  
          <!-- 
            The XMLWriterTraceListener writes log messages to an XML file.  Keep in mind that writing to XML is typically much slower than 
				    writing to plain text.
			    -->
          <add name="XmlLog" type="System.Diagnostics.XmlWriterTraceListener" initializeData="c:\SampleLog.xml">
            <filter type="System.Diagnostics.EventTypeFilter" initializeData="Warning" />
          </add>
          
        </sharedListeners>
    </system.diagnostics>
</configuration>