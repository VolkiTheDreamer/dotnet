<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddNewDateButton" xml:space="preserve">
    <value>Add New Date</value>
  </data>
  <data name="AverageOfUnitsSold" xml:space="preserve">
    <value>Average of Units Sold</value>
  </data>
  <data name="AverageProfit" xml:space="preserve">
    <value>Average Profit</value>
  </data>
  <data name="AverageSold" xml:space="preserve">
    <value>Average Sold</value>
  </data>
  <data name="AveragesPivotTableName" xml:space="preserve">
    <value>Averages</value>
  </data>
  <data name="CreateUnscheduledOrderRecommendation" xml:space="preserve">
    <value>create unscheduled order</value>
  </data>
  <data name="CurrentInventoryHeader" xml:space="preserve">
    <value>Current Inventory</value>
  </data>
  <data name="DataIncompleteError" xml:space="preserve">
    <value>You must enter end-of-day inventory values for all ice cream flavors for {0:d} before you can create an order or add new sales data.</value>
  </data>
  <data name="DateHeader" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="DeliveryDateHeader" xml:space="preserve">
    <value>Delivery Date</value>
  </data>
  <data name="EodInventoryHeader" xml:space="preserve">
    <value>Actual End-of-Day Inventory</value>
  </data>
  <data name="EstimatedInventoryHeader" xml:space="preserve">
    <value>Estimated Inventory</value>
  </data>
  <data name="IceCreamHeader" xml:space="preserve">
    <value>Ice Cream</value>
  </data>
  <data name="InventoryHeader" xml:space="preserve">
    <value>Inventory</value>
  </data>
  <data name="MaxDailySalesHeader" xml:space="preserve">
    <value>Maximum Daily Sales</value>
  </data>
  <data name="NetGainHeader" xml:space="preserve">
    <value>Net Gain</value>
  </data>
  <data name="OrderDateHeader" xml:space="preserve">
    <value>Order Date</value>
  </data>
  <data name="OrderQuantityHeader" xml:space="preserve">
    <value>Order Quantity</value>
  </data>
  <data name="OrdersMenu" xml:space="preserve">
    <value>O&amp;rders</value>
  </data>
  <data name="OrdersToolbar" xml:space="preserve">
    <value>Orders</value>
  </data>
  <data name="ProfitHeader" xml:space="preserve">
    <value>Profit</value>
  </data>
  <data name="ProjectedInventoryHeader" xml:space="preserve">
    <value>Projected Inventory</value>
  </data>
  <data name="ProjectedSalesHeader" xml:space="preserve">
    <value>Projected Sales</value>
  </data>
  <data name="RecommendationHeader" xml:space="preserve">
    <value>Recommendation</value>
  </data>
  <data name="SalesAndProfitPivotTableName" xml:space="preserve">
    <value>SalesAndProfit</value>
  </data>
  <data name="SaveDataButton" xml:space="preserve">
    <value>Save Data</value>
  </data>
  <data name="Sheet1DateLabel" xml:space="preserve">
    <value>Date:</value>
  </data>
  <data name="Sheet1Name" xml:space="preserve">
    <value>Inventory</value>
  </data>
  <data name="Sheet1Title" xml:space="preserve">
    <value>Inventory Control</value>
  </data>
  <data name="Sheet2IceCreamLabel" xml:space="preserve">
    <value>Ice Cream</value>
  </data>
  <data name="Sheet2Name" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Sheet2Title" xml:space="preserve">
    <value>Inventory Details</value>
  </data>
  <data name="SoldHeader" xml:space="preserve">
    <value>Sold</value>
  </data>
  <data name="StdDevOfUnitsSold" xml:space="preserve">
    <value>StdDev of Units Sold</value>
  </data>
  <data name="UnitsSoldHeader" xml:space="preserve">
    <value>Units Sold</value>
  </data>
  <data name="UnscheduledMenu" xml:space="preserve">
    <value>Create &amp;Unscheduled Order</value>
  </data>
  <data name="UnscheduledOrderNotRecommended" xml:space="preserve">
    <value>Estimated cost from unscheduled order of low inventory items is {0:.00}. Unscheduled order is not recommended.</value>
  </data>
  <data name="UnscheduledOrderRecommended" xml:space="preserve">
    <value>Estimated profit from unscheduled order of low inventory items is {0:.00}.</value>
  </data>
  <data name="UnscheduledOrderSheetCreationError" xml:space="preserve">
    <value>Unable to create an Unscheduled Order worksheet. Please verify that a new worksheet can be added to the workbook and that no worksheet named {0} exists.</value>
  </data>
  <data name="UnscheduledOrderSheetName" xml:space="preserve">
    <value>Unscheduled Order: {0}</value>
  </data>
  <data name="WeeklyMenu" xml:space="preserve">
    <value>Create &amp;Weekly Order</value>
  </data>
  <data name="WeeklyOrderSheetCreationError" xml:space="preserve">
    <value>Unable to create a Weekly Order worksheet. Please verify that a new worksheet can be added to the workbook and that no worksheet named {0} exists.</value>
  </data>
  <data name="WeeklyOrderSheetName" xml:space="preserve">
    <value>Weekly Order: {0}</value>
  </data>
  <data name="WorksheetExistsError" xml:space="preserve">
    <value>A worksheet with name {0} already exists.</value>
  </data>
</root>