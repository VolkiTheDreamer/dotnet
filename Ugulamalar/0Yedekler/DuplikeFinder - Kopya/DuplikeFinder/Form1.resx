<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="folderBrowserDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>186, 17</value>
  </metadata>
  <data name="chkHash.ToolTip" xml:space="preserve">
    <value>Bu seçenek seçildiğinde Hash Algoritmasına göre tarama yapılacaktır, bu yüzden programın çalışması daha uzun sürecektir, 
ancak yine de byte byte okuma yöntemine göre çok daha hızlıdır. Tüm disk yerine belli klasörler ve mümkünse tüm dosya türleri 
yerine belli türlerin taratılması tavisye edilir. Ayrıca, zaruri değilse belli bir dosya boyutu sınırı koymanız da tavsiye edilir. Ancak 
film, database dosyası v.s gibi büyük dosyalar sözkonusu ise boyut sınırı koymayabilirsiniz.

"Hash tam olarak nedir?" sorusunun evabına Yardım menüsünden ulaşabilirsiniz.</value>
  </data>
  <data name="chkTarih.ToolTip" xml:space="preserve">
    <value>Her ne kadar değiştirme tarihi olarak belirtilmişse de 
birçok dosya için oluştuurlma tarihi anlamına da gelecektir.
Malesef dosyalar bi cihazdan başka bi cihaza kopyalandığında
oluuturlma tarihi kopyalama tarihi olarak değişir. Bu da oluşuturma 
tarihine göre duplike bulma işini es eçmesine neden olur. Bu yüzden
değiştirlme tarihi baz alınmıştır.</value>
  </data>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>283, 17</value>
  </metadata>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>383, 13</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>40</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAECAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAfn5+t4CAgP+AgID/gICA/4CAgP+AgID/gICA/4CAgP+AgID/gICA/4CA
        gP9+fn63AAAAAAAAAAAAAAAAAAAAAICAgP/b29v/////////////////////////////////////////
        ///b29v/gICA/wAAAAAAAAAAAAAAAAAAAACAgID/////////////////////////////////////////
        /////////////4CAgP8AAAAAAAAAAAAAAAAAAAAAgICA//////+enp7//////7Ozs/+zs7P/s7Oz/7Oz
        s/+zs7P/s7Oz//////+AgID/AAAAAH5+freAgID/AAAAAICAgP//////////////////////////////
        ////////////////////////gICA/wAAAACAgID/29vb//////+AgID/////////////////////////
        /////////////////////////////4CAgP8AAAAAgICA////////////gICA///////W1tb/1tbW/9bW
        1v/W1tb/1tbW/9bW1v/W1tb/1tbW//////+AgID/AAAAAICAgP///////////4CAgP//////1tbW/9bW
        1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v//////gICA/wAAAACAgID/////////////////////////
        ////////////////////////////////////////3t7e/4CAgP8AAAAAAAAAAPj7/v+Jxuv/////////
        ////////gICA/4CAgP+AgID/gICA/4CAgP+AgID/gICA/4CAgP9+fn69AAAAAILC6v/1+v3/iMXr//v9
        /v+Cwur/////////////////////////////////AAAAAAAAAAAAAAAAAAAAAAAAAAB6vOIbisXq/ILC
        6v+Lxuv+7/f8///////R0dH/0dHR/9HR0f/R0dH//////4CAgP8AAAAAAAAAAAAAAACBwenwgsLq/4LC
        6v8AAAAAgsLq/4LC6v+Cwur//////////////////////97e3v+AgID/AAAAAAAAAAAAAAAAAAAAAHvB
        5yGBwen5gsLq/4HB6fl/vOYqAAAAAAAAAACAgID/gICA/4CAgP+AgID/fn5+vQAAAAAAAAAAAAAAAAAA
        AACCwur/f8HnNoHB6fZ8wOgtgsLq/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAHe73Q+BwenwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA8AAAAPAAAADwAAAA8AAAAJAAAACAAAAAgAAAAIAAAACAAAAAwAAAAIAPAACABwAAEAcAAIMH
        AACD/wAAz/8AAA==
</value>
  </data>
</root>